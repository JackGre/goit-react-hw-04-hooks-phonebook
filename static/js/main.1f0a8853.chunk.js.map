{"version":3,"sources":["components/ContactFilter/ContactFilter.module.css","components/ContactList/ContactItem.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","addContact","useState","name","setName","number","setNumber","onChange","e","currentTarget","target","value","className","styles","Form","onSubmit","preventDefault","newContact","id","shortid","generate","type","pattern","title","required","ContactFilter","Filter","ContactItem","contacts","onClick","map","ContactList","App","setContacts","filter","setFilter","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","visibleFilterContact","includes","Container","undefined","find","prevState","alert","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f0a8853.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"ContactFilter_Filter__3IQxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__N0GfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__7Iu9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3maQX\"};","import React, { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ addContact }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    \r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        switch (e.currentTarget.name) {\r\n            case \"name\":\r\n                return setName(e.target.value);\r\n            case \"number\":\r\n                return setNumber(e.target.value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    addContact(newContact);\r\n    reset();\r\n  };\r\n        \r\n    return (\r\n            <form className={styles.Form} onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={onChange}\r\n                />\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n    );\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './ContactFilter.module.css';\r\n\r\n\r\nconst ContactFilter = ({ value, onChange }) => {\r\n    return (\r\n        <div className={styles.Filter}>\r\n            <label>\r\n                 Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange}></input>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({contacts, onClick}) => {\r\n\r\n    return (\r\n        contacts.map(({ name, number, id }) => {\r\n            return (\r\n            <li className={styles.ContactItem} key={id}>\r\n                <p>\r\n                    <span>{name}</span>\r\n                    <span>{number}</span>\r\n                </p>\r\n                    <button onClick={() => onClick(id)}>Delete</button>\r\n            </li>\r\n        )})\r\n\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onClick}) => {\r\n    return (\r\n        <ul className={styles.ContactList}>\r\n            <ContactItem contacts={contacts} onClick={onClick}/>\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ContactList;","import  { useEffect, useState} from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactFilter from './components/ContactFilter';\nimport ContactList from './components/ContactList';\n\nimport styles from \"./App.module.css\";\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(localContacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts)\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts]);\n\n\n  const addContact = (newContact) => {\n    const check = contacts.find(\n      ({ name }) => name === newContact.name\n    );\n    \n    \n    if (check !== undefined) {\n      alert(`${newContact.name} is already in contacts`)\n      return;\n    }\n    \n    \n    setContacts((prevState) => [newContact, ...prevState])\n  };\n\n  const removeContact = (id) => {\n      setContacts(contacts.filter((contact) =>\n        contact.id !== id));    \n  };\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value );\n  };\n  \n  \n    \n  const normalizedFilter = filter.toLowerCase();\n  const visibleFilterContact = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n      <div className={styles.Container}>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact}/>\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChange={changeFilter} />\n        <ContactList contacts={visibleFilterContact} onClick={removeContact} />\n      </div>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__31Qtp\"};"],"sourceRoot":""}